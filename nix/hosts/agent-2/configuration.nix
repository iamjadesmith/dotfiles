{
  config,
  lib,
  inputs,
  outputs,
  pkgs,
  meta,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];

  nix = {
    package = pkgs.nixVersions.stable;
    extraOptions = ''
      experimental-features = nix-command flakes
    '';
  };

  nixpkgs = {
    overlays = [
      outputs.overlays.additions
      outputs.overlays.unstable
      inputs.alacritty-theme.overlays.default
    ];
    config = {
      permittedInsecurePackages = [ "electron-25.9.0" ];
      allowUnfree = true;
    };
  };

  boot.loader.grub.enable = lib.mkDefault true;
  boot.loader.grub.devices = [ "nodev" ];

  services.qemuGuest.enable = lib.mkDefault true;

  fileSystems."/" = lib.mkDefault {
    device = "/dev/disk/by-label/nixos";
    autoResize = true;
    fsType = "ext4";
  };

  networking.hostName = meta.hostname;
  networking.networkmanager.enable = true;

  time.timeZone = "America/Chicago";

  i18n.defaultLocale = "en_US.UTF-8";
  console = {
    font = "Lat2-Terminus16";
    keyMap = "us";
  };

  systemd.tmpfiles.rules = [
    "L+ /usr/local/bin - - - - /run/current-system/sw/bin/"
  ];
  virtualisation.docker.logDriver = "json-file";

  services.k3s = {
    enable = true;
    role = "server";
    tokenFile = /var/lib/rancher/k3s/server/token;
    extraFlags = toString (
      [
        "--write-kubeconfig-mode \"0644\""
        "--cluster-init"
        "--disable servicelb"
        "--disable traefik"
        "--disable local-storage"
      ]
      ++ (
        if meta.hostname == "agent-1" then
          [ ]
        else
          [
            "--server https://agent-1:6443"
          ]
      )
    );
    clusterInit = (meta.hostname == "agent-1");
  };

  services.openiscsi = {
    enable = true;
    name = "iqn.2016-04.com.open-iscsi:${meta.hostname}";
  };

  users.users.joejad = {
    isNormalUser = true;
    shell = pkgs.zsh;
    extraGroups = [ "wheel" ];
    packages = with pkgs; [
      tree
    ];
    hashedPassword = "$y$j9T$zCosUIu8eNq21sMsgQ7ya.$0oQ.aynDLokO77HvIjV.EEMDrnI25n8VQJgEd3RlSx8";
    openssh.authorizedKeys.keys = [
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICIi5XbhWvuZU9HQ7zG06jCdBp1KikJVoqzBsjNpQP05 joejad@joejadnix"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFoJ+uZAEo2H9IV4IbtL7u8maMd2tyTAUGl9l7/l9oe/ jadesmith@Jades-MacBook-Pro.local"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBA7ZrM16IHoMUHjoipAL7IhHtr9woN7gtyWy6gdQh0y Generated By Termius"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMbuKctCqNq2KDOsavoPDSZMbYdtrvZhPYda5c4pH19Y Generated By Termius"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE+EYcg6tzERSKh58WGnVhBQ0eNUGSHfEk2Uw1XizC1e Shortcuts on Jade’s iPhone"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKgYIcGwg/BHL2nJ+DfZsa2nvGz+e6TgUzuvIGudKB+w Shortcuts on Jade’s iPad"
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBreNu9nXnPthacxlodcL+dp81vmCLrI2U1D1u4zexV2 joejad@nixnas"
    ];
  };

  programs.zsh.enable = true;

  environment.systemPackages = with pkgs; [
    k3s
    intel-gpu-tools
    unstable.neovim
    fluxcd
    kubectl
    helm
    cifs-utils
    nfs-utils
    git
    samba
    postgresql_17
    zsh
    bash
    tmux
    fzf
    zoxide
    lua
    stow
    ripgrep
    gnumake
    gcc
    nil
    R
    lua-language-server
    luajitPackages.luarocks-nix
    stylua
    nixfmt-rfc-style
    oh-my-posh
    unstable.rustup
    unstable.cargo
    lazygit
  ];

  services.openssh = {
    enable = true;
    settings = {
      PasswordAuthentication = false;
      PermitRootLogin = "no";
    };
  };

  networking.firewall.enable = false;
  system.stateVersion = "23.11";
}
